/*********************************

chubuk.js

Copyright (c) 2016, University of Maryland
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* Neither the name of the University of Maryland nor the names of its contributors
  may not be used to endorse or promote products derived from this software
  without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

************************************ */

@import "stylesheets/lesshat";

.Chubuk{
  .display(flex);
  .flex-direction(column);
  position: relative;
  font-family: 'Roboto', sans-serif;
  line-height: 1em;

  // to reuse the style for different sections
  .selectedVizType{
    color: black;
    box-shadow: 1px 1px 1px black;
    font-weight: 600 !important;
  }

  > .configPanel{
    font-family: 'Roboto', sans-serif;
    display: block;
    position: absolute;
    .user-select(none);
    left: 0px;
    bottom: -80px;
    z-index: 200;
    width: 100%;
    margin: 0px;

    &[active="false"]{
      border: solid 0px lightgray;
      margin: 1px;
      > .selectVizType{ display: none; }
      .configGroup{ display: none; }
    }

    .chartOptions{
      text-align: center;
    }

    > .configVisiblityButton{
      position: absolute;
      right: 2px;
      bottom: 2px;
      cursor: pointer;
      &:hover{ color: orangered; }
    }

    > .selectVizType{
      padding: 2px;
      .display(flex);
      .flex-direction(row);
      > .selectVizType-Header{
        display: block;
        padding: 4px;
        font-weight: 500;
      }
      > .vizType{
        .flex(1);
        padding: 2px;
        border: solid 1px lightgray;
        border-radius: 1px;
        font-weight: 300;
        text-align: center;
        margin: 1px 5px;
        cursor: pointer;
        background-color: white;
        color: gray;
        &:hover{ 
          border-color: gray;
          font-weight: 400; 
          color: black;
        }
      }
    }

    input[type="number"]{
      height: 1em;
      border-width: 0px;
    }

    .configGroup{
      border: solid 1px gray;
      border-radius: 2px;
      margin: 3px 0px;
      padding: 2px 7px;
      height: 1.2em;
      display: inline-block;
      vertical-align: middle;
      > .configHeading{
        font-weight: 700;
        cursor: pointer;
        color: black;
        &:hover{ color: orangered; }
      }
      > .configOpt{
        display: inline-block;
        cursor: pointer;
        font-size: 0.8em;
        border: solid 1px lightgray;
        border-radius: 2px;
        padding: 0px 2px;
        margin: 0px 1px;
        background-color: white;
        > .opt_label{
          margin-left: 2px;
          font-size: 0.9em;
        }
        &:hover{ color: orangered !important; }
        &.dataDistr{
          > input[type="radio"]{
            height: 12px;
            vertical-align: baseline;
            padding: 2px;
            margin: 0px;
          }
          > label{ 
            cursor: pointer;
            font-weight: 300;
          }
        }
        &.numItems{
          .in_numItems{
            width: 35px;
          }
        }
        &.barHeightList { display: none; } // only in long-list
        &.button_wrappedInverse{ display: none; } // only in wrapped
        &.button_showColor     { display: none; } // only when data includes negative values
        &.columnGap { display: none; } // only in wrapped
      }
      .refreshData{
        cursor: pointer;
        &:hover{ color: orangered; }
      }
      &[active="false"]{
        > .configOpt{ display: none !important; }
        > .configHeading{ color: gray; }
      }
    } // .configGroup
  } // .configPanel

  > .chartWrapper{
    position: relative;
    .flex(1);
    .display(flex);
    .flex-direction(column);
    z-index: 10;
    overflow: visible;
    overflow-x: hidden;
    .box-sizing(border-box);
    *{ .box-sizing(border-box);   }
    > .recordGroup{
      position: relative;
      overflow: hidden;
      .flex(1);
    }
    > .rowGroup{
      display: none;
      > .rowIndexLabel{
        text-align: right;
        position: absolute;
        right: 2px;
        font-weight: 100;
        font-size: 0.9em;
        &:after{
          content: "#";
          color: gray;
          font-size: 0.6em;
          position: relative;
          top: -2px;
          margin-left: 1px;
        }
      }
    }
  } // .chartWrapper

  .record{
    display: block;
    position: absolute;
    .transition(~"left 750ms ease-in-out, width 750ms ease-in-out, height 750ms ease-in-out, top 750ms ease-in-out");
    > .block{
      display: block;
      position: absolute;
      left: 0px;
      top: 0px;
      width: 100%;
      height: 100%;
      .transition(~"all 250ms ease-in-out");
    }
    > .block_tip{
      display: block;
      position: absolute;
      width: 10px;
      height: 10px;
      right: -5px;
      opacity: 0;
      top: calc(~"50% - 5px");
      .transition(~"all 200ms ease-in-out");
      z-index: 100;
    }
    > .label{
      position: absolute;
      left: 0%;
      width: 100%;
      padding-left: 1px;
      padding-right: 1px;
      padding-top: 1px;
      font-size: 0.8em;
      font-weight: 400;
      text-shadow: 0px 0px 6px white, 0px 0px 2px white;
      z-index: 101;

      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      
      pointer-events: none;
    }
    &:hover{ 
      z-index: 90 !important;
      > .label{ max-width: 100% !important; }
    }
  }

  > .chartAxis{
    position: relative;
    > .scale {
      position: absolute;
      > .baseLine{
        border-bottom: solid 1px lightgray;
        position: absolute;
        top: 0px;
      }
      > .tick{
        cursor: pointer;
        pointer-events: none;
        position: absolute;
        height: 10px;
        > .line{
          display: block;
          position: absolute;
          left: -1px;
          width: 0px;
          border-left: dotted 1px gray;
          //height: 10px; // set by the code
          //top: -5px; // set by the code
        }
        &[value="0"] {
          > .line{
            border-left: solid 2px gray;
            left: -1px;
          }
          > .text{
            font-weight: 500;
            &[textpos="upper"]{ margin-top: -1px; }
          }
        }
        > .text{
          display: block;
          position: relative;
          margin-top: 4px;
          cursor: pointer;
          left: -50%;
          text-align: center;
          font-weight: 100;
          font-size: 0.9em;
        }
      }
    }
  }

  &[chart_type="long_list"]{
    .vizType.long_list{ .selectedVizType() }
    .record {
      > .block{ background-color: #92C5E2; }
      > .label{
        overflow: visible;
        text-overflow: none;
      }
    }
    > .chartAxis{
      &[lowerNegative="true"]{ .text-lower:before{ content: "-"; } }
      &[upperNegative="true"]{ .text-upper:before{ content: "-"; } }
    }
    > .chartWrapper{
      border-top: solid 1px lightgray;
      border-bottom: solid 1px lightgray;
      margin-top: -1px;
      margin-bottom: -1px;
      > .recordGroup{ overflow-y: auto; }
    }
    > .configPanel .configGroup > .configOpt{
      &.barHeightList{ display: inline-block; }
      &.numBands     { display: none;         }
      &.barPadding   { display: none;         }
    }
  }

  &[chart_type="treemap"]{
    .vizType.treemap{ .selectedVizType() }
    .record{
      border: solid 1px white;
      > .block{ background-color: #92C5E2; }
      > .block:after{ text-align: center; }
      > .label{ text-align: center; }
    }
    > .chartAxis{ display: none; }
    > .chartWrapper {
      border-top: none;
      border-bottom: none;
      > .rowGroup > .rowIndexLabel{ display: none; }
    }
    > .configPanel .configGroup > .configOpt{
      &.numBands             { display: none;         }
      &.barPadding           { display: none;         }
      &.button_showTip       { display: none;         }
      &.button_showGridLines { display: none;         }
    }
  } // &[chart_type="treemap"]

  &[chart_type="piled_bars"]{
    .vizType.piled_bars{ .selectedVizType() }
    .record{
      > .block{
        top: 0px;
        border-style: solid;
        border-width: 1px 0px; // top and bottom borders
      }
      > .block_tip{
        height: calc(~'100% - 4px');
        top: 2px;
        right: 0px;
        width: 5px;
        opacity: 1;
        z-index: -1;
      }
      &[isNegative="false"]{
        //box-shadow: 4px 0px 5px -0px white;
        //box-shadow: 3px 0px 6px -0px rgba(0,0,0,0.4);
        > .label{
          text-align: right;
          left: auto;
          right: 0%;
        }
        > .block_tip{
          box-shadow: 3px 0px 4px -0px rgba(0,0,0,0.6);
        }
      }
      &[isNegative="true"]{
        //box-shadow: -4px 0px 5px -0px white;
        //box-shadow: -3px 0px 6px -0px rgba(0,0,0,0.4);
        border-right: 0px;
        .block_tip{
          box-shadow: -3px 0px 4px -0px rgba(0,0,0,0.6);
          left: 0px;
          right: auto;
        }
      }
    }
  } // &[chart_type="piled_bars"]
    
    
   &[chart_type="zvinca_plot"]{
    .vizType.zvinca_plot{ .selectedVizType() }
    .record{
      > .block{
        //top: 0px;
        //border-style: solid;
        //border-width: 1px 0px; // top and bottom borders
        //background-image:null !important; 
         background-color: transparent !important;
      }
      > .block_tip{
     ////   height: calc(~'100% - 4px');
     ////   top: 2px;
     ////   right: 0px;
       // width: 5px;
        width: 7px;
	    height: 7px;
        border-radius: 50%;
        //background-color: #257e9a;
        opacity: 1;
        //z-index: -1;
      }
      &[isNegative="false"]{
        //box-shadow: 4px 0px 5px -0px white;
        //box-shadow: 3px 0px 6px -0px rgba(0,0,0,0.4);
        > .label{
          text-align: right;
          left: auto;
          right: 0%;
          padding-right: 5px;
        }
        > .block_tip{
          background-color: #7DA7C7;
          //box-shadow: 3px 0px 4px -0px rgba(0,0,0,0.6);
        }
      }
      &[isNegative="true"]{
        //box-shadow: -4px 0px 5px -0px white;
        //box-shadow: -3px 0px 6px -0px rgba(0,0,0,0.4);
        border-right: 0px;
        > .label{
          //text-align: right;
          //left: auto;
          padding-left: 9px;
          //right: 0%;
        }
        .block_tip{
          background-color: #ef8a62;
          //box-shadow: -3px 0px 4px -0px rgba(0,0,0,0.6);
          left: 0px;
          right: auto;
        }
      }
    }
  } // &[chart_type="zvinca_plot"]

    
  &[chart_type="packed_bars"]{
    .vizType.packed_bars{ .selectedVizType() }
    .record{
      > .block{
        background-color:#9cc4df;
        border-right:1px;
        border-color:#fff;
        border-right-style: solid;
      }
      > .block_tip{
        //display:none;
        background-color:#9cc4df;
        height: calc(~'100% - 4px');
        top: 2px;
        right: 0px;
        opacity: 0;
      }
      &[isNegative="false"]{
        > .label{
          text-align: right;
          left: auto;
          right: 0%;
        }
      }
      &[isNegative="true"]{
        border-right: 0px;
        .block_tip{
          background-color: #ef8a62;
          left: 0px;
          right: auto;
        }
      }
    }
  } // &[chart_type="packed_bars"]

  &[chart_type="wrapped_bars"]{
    .vizType.wrapped_bars{ .selectedVizType() }
    .record{
      > .block{ background-color: #92C5E2; }
      &[isNegative="true"]{
        > .label{
          position: absolute;
          right: 0%;
          width: 100%;
          padding-right: 2px;
          padding-left: 0px;
          padding-top: 2px;
          text-align: right;
        }
        > .block_tip{
          left: -7px;
          right: auto;
        }
      }
    }
    > .configPanel .configGroup > .configOpt{
      &.button_wrappedInverse{ display: inline-block; }
      &.columnGap{ display: inline-block; }
    }
  } // [chart_type="wrapped_bars"]

  &[showlabel="true"]{
    .label{ display: block; }
    .button_showLabel > .fa:before{ content: "\f06e"; }
  }
  &[showlabel="false"]{
    .label{ display: none !important; }
    .button_showLabel {
      color: gray;
      > .fa:before{ content: "\f070"; }
    }
  }

  &[showColor="true"]{
    .button_showColor {
      background-color: rgba(255, 69, 0, 0.5) !important;
      color: white;
      > .fa:before{ content: "\f058"; }
    }
    .record[isNegative="true"] > .block{ background-color: #ef8a62; }
  }
  &[showColor="false"]{
    .button_showColor {
      background-color: rgba(255, 69, 0, 0.13) !important;
      color: gray;
      > .fa:before{ content: "\f057"; }
    }
  }

  &[showTooltip="true"]{
    .button_showTooltip > .fa:before{ content: "\f06e"; }
  }
  &[showTooltip="false"]{
    .button_showTooltip {
      color: gray;
      > .fa:before{ content: "\f070"; }
    }
  }

  &[showGridLines="true"]{
      .button_showGridLines > .fa:before{ content: "\f058"; } // Check
  }
  &[showGridLines="false"]{
    .button_showGridLines {
      color: gray;
      > .fa:before{ content: "\f057"; } // Cross
    }
    > .chartAxis > .scale > .tick > .text{ display: none; }
    > .chartAxis > .scale > .tick:not([value="0"]) > .line{ display: none; }
  }

  &[wrappedInverse="true"]{
    .button_wrappedInverse > .fa:before{ content: "\f058"; }
  }
  &[wrappedInverse="false"]{
    .button_wrappedInverse {
      color: gray;
      > .fa:before{ content: "\f057"; } // Cross
    }
  }

  input.negativeRatio{
    .user-select(none);
  }
  &[datanegative="true"]{
      .config_datanegative > .fa:before{ content: "\f058"; } // Check
      input.negativeRatio{
          display: inline-block;
          width:80px;
          height:7px;
      }
      > .configPanel .configGroup > .configOpt.button_showColor{ display: inline-block; }
  }
  &[datanegative="false"]{
    .config_datanegative{
      color: gray;
      > .fa:before{ content: "\f057"; } // Cross
    }
    input.negativeRatio{ display: none; }
  }
}

.tipsy { 
  font-family: 'Roboto', sans-serif;
  font-size: 10px; 
  position: absolute; 
  padding: 5px;
  z-index: 100000;
  pointer-events: none;
  .tipsy-inner { 
    padding: 3px;
    font-size: 1.2em;
    background-color: #000; 
    color: #FFF;
    max-width: 200px;
    text-align: center;
    font-weight: 300px;
    border-radius: 3px;
  }
}

/* Uncomment for shadow */
/*.tipsy-inner { box-shadow: 0 0 5px #000000; -webkit-box-shadow: 0 0 5px #000000; -moz-box-shadow: 0 0 5px #000000; }*/

.tipsy-arrow { position: absolute; width: 0; height: 0; line-height: 0; border: 5px dashed #000; }

.tipsy-n .tipsy-arrow { top: 0px; left: 50%; margin-left: -5px; border-bottom-style: solid; border-top: none; border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-nw .tipsy-arrow { top: 0; left: 10px; border-bottom-style: solid; border-top: none; border-left-color: transparent !important; border-right-color: transparent !important;}
.tipsy-ne .tipsy-arrow { top: 0; right: 10px; border-bottom-style: solid; border-top: none;  border-left-color: transparent !important; border-right-color: transparent !important;}
.tipsy-s .tipsy-arrow { bottom: 0; left: 50%; margin-left: -5px; border-top-style: solid; border-bottom: none;  border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-sw .tipsy-arrow { bottom: 0; left: 10px; border-top-style: solid; border-bottom: none;  border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-se .tipsy-arrow { bottom: 0; right: 10px; border-top-style: solid; border-bottom: none; border-left-color: transparent !important; border-right-color: transparent !important; }
.tipsy-e .tipsy-arrow { right: 0; top: 50%; margin-top: -5px; border-left-style: solid; border-right: none; border-top-color: transparent !important; border-bottom-color: transparent !important; }
.tipsy-w .tipsy-arrow { left: 0; top: 50%; margin-top: -5px; border-right-style: solid; border-left: none; border-top-color: transparent !important; border-bottom-color: transparent !important; }

